{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5d30d11c_1373b2ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-01-10T22:45:02Z",
      "side": 1,
      "message": "That\u0027s bad and optimising sdbusplus is a good outcome, but I do wonder whether the design is wrong. A philosophy that\u0027s been bandied about is if the data you\u0027re exchanging on D-Bus isn\u0027t human-consumable in a `busctl introspect` or `busctl monitor` then there are probably better approaches. For instance, in this case an alternative is to use D-Bus\u0027 [file descriptor type (`h`)](https://dbus.freedesktop.org/doc/dbus-specification.html#basic-types) along with [memfd_create(2)](https://man7.org/linux/man-pages/man2/memfd_create.2.html) to pass a descriptor for a memory region between processes. This would avoid the problem altogether.",
      "range": {
        "startLine": 14,
        "startChar": 9,
        "endLine": 18,
        "endChar": 27
      },
      "revId": "5ec887b44f0f675ff328b52d7194cdb3525b1630",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82e187c5_860fa74b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1001902
      },
      "writtenOn": "2024-01-11T00:10:55Z",
      "side": 1,
      "message": "Hi, Andrew,\nThank you for reviewing.  \n\nI generally agree to your comment/approach.  \n\nBut since here sdbusplus exposes this as a generic interface -- there\u0027s no good way to prevent sdbusplus client code to \"abuse\" it ...\n\nTaking the host CPU booting over I3C use case I am referring to here, the better approach is clearly a shared memory (implemented with memfd_create, passing the fd over UNIX socket/D-Bus) between MCTPD and PLDMD for the whole CPU boot image (in 20MB size or even larger), instead of sending it piece by piece over IPC call (like 5000 calls for the whole boot).\n\nBased on the fact that we can not force client code to not use this interface (passing vector/array of integral over D-Bus/sdbusplus), I think this is a valid optimization approach -- while creating a mem fd inside this, passing it to peer for every package (create fd -\u003e send fd -\u003e close fd for 5000 times) looks a overkill, and may introduce more performance burden.\n\nHow do you think?\nThanks!\nYongbing",
      "parentUuid": "5d30d11c_1373b2ab",
      "range": {
        "startLine": 14,
        "startChar": 9,
        "endLine": 18,
        "endChar": 27
      },
      "revId": "5ec887b44f0f675ff328b52d7194cdb3525b1630",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}