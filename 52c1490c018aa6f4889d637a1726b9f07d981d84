{
  "comments": [
    {
      "key": {
        "uuid": "f727acce_3d018ae5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-04-23T14:16:17Z",
      "side": 1,
      "message": "Signed-off ?",
      "revId": "52c1490c018aa6f4889d637a1726b9f07d981d84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9597758_1970b699",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-04-22T23:40:13Z",
      "side": 1,
      "message": "It would be easier / faster to rfind(\u0027/\u0027) directly here. The beginning of the filename would be the index or 0 if not found and you wouldn\u0027t need to construct the parent path only to discard it.",
      "revId": "52c1490c018aa6f4889d637a1726b9f07d981d84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8aa1fcb_70200c2f",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-04-22T23:49:36Z",
      "side": 1,
      "message": "We do use parent on line 169, so we\u0027d need to generate it for that path either way, but I think you\u0027re right, this could be more efficient if we did the rfind first.",
      "parentUuid": "c9597758_1970b699",
      "revId": "52c1490c018aa6f4889d637a1726b9f07d981d84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afb5d174_87b09f06",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-04-23T09:21:37Z",
      "side": 1,
      "message": "I would just use sd_bus_encode_path_many / sd_bus_decode_path_many with \"%\" as the format string since it doesn\u0027t require the parent path at all. Would have been nice if they had a simple  `sd_bus_{encode,decode}` function.",
      "parentUuid": "a8aa1fcb_70200c2f",
      "revId": "52c1490c018aa6f4889d637a1726b9f07d981d84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57b7bea5_12613035",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 209,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-04-22T23:40:13Z",
      "side": 1,
      "message": "Too bad gcc doesn\u0027t support array length deduction with partial specialization until 11.",
      "revId": "52c1490c018aa6f4889d637a1726b9f07d981d84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "608d7bd5_c630b079",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 209,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-04-22T23:49:36Z",
      "side": 1,
      "message": "but there\u0027s something so satisfying about seeing 16 there ðŸ˜‹\n\nTime to switch to rust.",
      "parentUuid": "57b7bea5_12613035",
      "revId": "52c1490c018aa6f4889d637a1726b9f07d981d84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8110ddea_0478896f",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 209,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2021-04-22T23:53:39Z",
      "side": 1,
      "message": "\u003e Time to switch to rust.\n\nI\u0027m +1 on that, but I think Rust happens to suffer from pretty much the exact same problem unfortunately: https://github.com/rust-lang/rfcs/pull/2545",
      "parentUuid": "608d7bd5_c630b079",
      "revId": "52c1490c018aa6f4889d637a1726b9f07d981d84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc6ec792_55a78110",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 209,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-04-24T01:05:42Z",
      "side": 1,
      "message": "Why not just say\n\n  const char* hex \u003d \"0123456789abcdef\";\n\nYou have to double check the contents are correct either way, but std::array is so much more verbose.",
      "parentUuid": "8110ddea_0478896f",
      "revId": "52c1490c018aa6f4889d637a1726b9f07d981d84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a37f09c_63e0b09d",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 228,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2021-04-24T01:05:42Z",
      "side": 1,
      "message": "firstChar could theoretically be negative, right?",
      "revId": "52c1490c018aa6f4889d637a1726b9f07d981d84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afedfc93_f6af65dc",
        "filename": "test/message/types.cpp",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-04-23T02:22:01Z",
      "side": 1,
      "message": "This changes the previous behavior, I am not sure if there is existing code that depends on this API, if yes, how do we make sure they are not affected?",
      "revId": "52c1490c018aa6f4889d637a1726b9f07d981d84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33b2935a_a891ee6d",
        "filename": "test/message/types.cpp",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-04-22T23:40:13Z",
      "side": 1,
      "message": "This is missing a test case for\n`sdbusplus::message::object_path(\"/abc\") / \"bios_active\"`\n-\u003e\n`sdbusplus::message::object_path(\"/abc/bios_active\")`",
      "revId": "52c1490c018aa6f4889d637a1726b9f07d981d84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "287074ee_dee58982",
        "filename": "test/message/types.cpp",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-04-22T23:49:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "33b2935a_a891ee6d",
      "revId": "52c1490c018aa6f4889d637a1726b9f07d981d84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}