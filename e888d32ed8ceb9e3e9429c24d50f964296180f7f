{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "507c7f2b_465fa2cc",
        "filename": "test/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-03-28T13:08:52Z",
      "side": 1,
      "message": "I don\u0027t understand this change. \n\n* Asserts fire when false.\n* If boost is found we don\u0027t want the assert. \n* If tests are not enabled we don\u0027t want the assert to fire. \n\n\nWasn\u0027t the old code doing exactly that?\n\nYou\u0027ve now made it such that finding boost and not enabling tests is the only way the assert fires.\n\nAre we just missing some parens around the \"not\" in front of the test enable check?",
      "revId": "e888d32ed8ceb9e3e9429c24d50f964296180f7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8425403_f409904c",
        "filename": "test/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000926
      },
      "writtenOn": "2024-03-28T13:21:27Z",
      "side": 1,
      "message": "Oops, sorry.\nApparently the problem is that tests are still build even if `get_option(\u0027tests\u0027).enabled() \u003d\u003d false`",
      "parentUuid": "507c7f2b_465fa2cc",
      "revId": "e888d32ed8ceb9e3e9429c24d50f964296180f7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b357f26e_b6fa12f5",
        "filename": "test/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000926
      },
      "writtenOn": "2024-03-28T13:29:59Z",
      "side": 1,
      "message": "Can this be a aolution?\n\n```\ndiff --git a/meson.build b/meson.build\nindex 52e330a..4f4c23d 100644\n--- a/meson.build\n+++ b/meson.build\n@@ -4,8 +4,8 @@ project(\u0027sdbusplus\u0027, \u0027cpp\u0027, \u0027c\u0027,\n       \u0027cpp_std\u003dc++23\u0027,\n       \u0027warning_level\u003d3\u0027,\n       \u0027werror\u003dtrue\u0027,\n-      \u0027tests\u003d\u0027 + (meson.is_subproject() ? \u0027disabled\u0027 : \u0027auto\u0027),\n-      \u0027examples\u003d\u0027 + (meson.is_subproject() ? \u0027disabled\u0027 : \u0027auto\u0027),\n+      \u0027tests\u003d\u0027 + (meson.is_subproject() ? \u0027disabled\u0027 : \u0027enabled\u0027),\n+      \u0027examples\u003d\u0027 + (meson.is_subproject() ? \u0027disabled\u0027 : \u0027enabled\u0027),\n     ],\n     version: \u00271.0.0\u0027,\n     meson_version: \u0027\u003e\u003d1.1.1\u0027,\n     ```",
      "parentUuid": "a8425403_f409904c",
      "revId": "e888d32ed8ceb9e3e9429c24d50f964296180f7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a87d5c7_da260c60",
        "filename": "test/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000926
      },
      "writtenOn": "2024-03-28T13:58:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b357f26e_b6fa12f5",
      "revId": "e888d32ed8ceb9e3e9429c24d50f964296180f7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}