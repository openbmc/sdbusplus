{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ea1469d8_c0aa7300",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-08T16:46:24Z",
      "side": 1,
      "message": "Is there an example of where this is used in a real instance?  I\u0027m having a little trouble understanding where the waitingTasks struct comes from and how it\u0027s used in a real scenario.",
      "revId": "b979648f5d59603e97345100289ba1d10ba9b564",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99c8e7d4_c994038e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-07-08T16:51:38Z",
      "side": 1,
      "message": "It will get used in phosphor-modbus where there is a use case that multiple devices can be daisy chained on the same serial port but only one device will use it at a time due to port being the shared resource. So, this mutex will help synchronize multiple tasks (pertaining to devices).",
      "parentUuid": "ea1469d8_c0aa7300",
      "revId": "b979648f5d59603e97345100289ba1d10ba9b564",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e6ead6c_3ea66bf2",
        "filename": "include/sdbusplus/async/mutex.hpp",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-07-08T15:00:16Z",
      "side": 1,
      "message": "We absolutely need this to return something like a scope_lock so that it automatically calls unlock when the scope closes.  Otherwise we have no RAII-style \"lock constructor\", which means we\u0027re going to end up with lock leaks on exceptions, etc.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 18
      },
      "revId": "b979648f5d59603e97345100289ba1d10ba9b564",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}