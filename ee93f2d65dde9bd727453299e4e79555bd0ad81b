{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2de432bd_fb01a88d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-20T01:07:51Z",
      "side": 1,
      "message": "FWIW, the async version of add match didn\u0027t exist in sd-bus when we did the asio extensions initially.  We\u0027ve known about this \"bug\" for a while, but given that the dbus daemon responds pretty quickly, it wasn\u0027t a huge issue in practice.\n\nI agree, it\u0027s probably time to fix it.\n\nWe probably need an async capable match_t in the asio namespace, that accepts a callback like the asio extensions would expect.  We should look at signals_set https://live.boost.org/doc/libs/1_84_0/doc/html/boost_asio/reference/signal_set.html\n\nAs a reference for how to do these callbacks and propagate errors on asio callbacks, including the queue.\n\nI\u0027ve mocked up what that could look like here:\nhttps://gerrit.openbmc.org/c/openbmc/sdbusplus/+/68959\n\nFeel free to incorporate it into your patch, or take over mine.",
      "revId": "ee93f2d65dde9bd727453299e4e79555bd0ad81b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdb83083_1bdafb9a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-20T02:43:30Z",
      "side": 1,
      "message": "\u003e We\u0027ve known about this \"bug\" for a while, but given that the dbus daemon responds pretty quickly, it wasn\u0027t a huge issue in practice.\n\nI feel like I\u0027m still getting conflicting information here.  The commit message says \"delay\" but elsewhere LeiYU claimed there was a hang.  If this is about fixing a delay in the time it takes for the dbus-broker to respond, this seems like excessive work and excessive complexity for almost no benefit.  If we start making the match registration async, I\u0027m certain people will start having incorrect code because they don\u0027t understand that there is this delay and further dbus queries they do have an implicit ordering incorrectness.\n\nIf there is a hang, we need to fix the hang; it is a bug in the asio code.\nIf there is a delay, I think we need a real use-case where these few ms cause a problem.",
      "parentUuid": "2de432bd_fb01a88d",
      "revId": "ee93f2d65dde9bd727453299e4e79555bd0ad81b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b6e9009_bcbfebd7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-01-21T15:16:06Z",
      "side": 1,
      "message": "It\u0027s not really delay nor hang, the events are queued and not handled until a new event is polled by `read_wait()`.\n\nWe need to fix it. And a proper fix is to add the new API for asio async match, and change the existing asio code to use the new API.\n\nI will integrate Ed\u0027s patch, test it and submit a new PS",
      "parentUuid": "fdb83083_1bdafb9a",
      "revId": "ee93f2d65dde9bd727453299e4e79555bd0ad81b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0a0540b_720bf9e1",
        "filename": "include/sdbusplus/bus/match.hpp",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-20T01:07:51Z",
      "side": 1,
      "message": "We should not be adding an asio dependency to non-asio objects.",
      "revId": "ee93f2d65dde9bd727453299e4e79555bd0ad81b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5db91473_5d55427a",
        "filename": "src/bus/match.cpp",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-20T01:07:51Z",
      "side": 1,
      "message": "Why is install_callback nullptr?  Surely we need to notify the caller that the installation succeeded, or pass the error back?",
      "range": {
        "startLine": 29,
        "startChar": 61,
        "endLine": 29,
        "endChar": 68
      },
      "revId": "ee93f2d65dde9bd727453299e4e79555bd0ad81b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "785ca993_9daed006",
        "filename": "src/bus/match.cpp",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-20T01:11:30Z",
      "side": 1,
      "message": "From the sdbusplus docs:\n\n\u003e If this function is specified as NULL a default implementation is used that terminates the bus connection should installing the match fail.\n\nI\u0027m guessing that\u0027s really not the behavior we want.",
      "parentUuid": "5db91473_5d55427a",
      "range": {
        "startLine": 29,
        "startChar": 61,
        "endLine": 29,
        "endChar": 68
      },
      "revId": "ee93f2d65dde9bd727453299e4e79555bd0ad81b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0f4ab09_b0812f3e",
        "filename": "src/bus/match.cpp",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-01-21T15:16:06Z",
      "side": 1,
      "message": "Right, it\u0027s going to be replaced by a user-provided callback with the new asio async match API.",
      "parentUuid": "785ca993_9daed006",
      "range": {
        "startLine": 29,
        "startChar": 61,
        "endLine": 29,
        "endChar": 68
      },
      "revId": "ee93f2d65dde9bd727453299e4e79555bd0ad81b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}