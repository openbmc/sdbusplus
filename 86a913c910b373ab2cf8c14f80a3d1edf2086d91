{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ac7eb9b6_e5d92f84",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2022-03-08T12:20:32Z",
      "side": 1,
      "message": "Seems very useful. All my comments were resolved.",
      "revId": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "343cbeb6_50d845ed",
        "filename": "include/sdbusplus/asio/property.hpp",
        "patchSetId": 11
      },
      "lineNbr": 13,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-11T22:41:30Z",
      "side": 1,
      "message": "Doesn\u0027t forcing a std::function for a lambda increase the size?",
      "range": {
        "startLine": 13,
        "startChar": 4,
        "endLine": 13,
        "endChar": 60
      },
      "revId": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c2773f4_9f72b84b",
        "filename": "include/sdbusplus/asio/property.hpp",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-11T22:41:30Z",
      "side": 1,
      "message": "I think the fact that \u0027move\u0027 works here means that for l-value references on line 29 we ended up forcing the creation of a temporary std::function.",
      "range": {
        "startLine": 17,
        "startChar": 26,
        "endLine": 17,
        "endChar": 44
      },
      "revId": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4faba27d_e80f374a",
        "filename": "include/sdbusplus/unpack_properties.hpp",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-11T22:41:30Z",
      "side": 1,
      "message": "Why\u0027d you switch this?  Can\u0027t std::begin give a constant-iterator for constant containers?  Or should this have become cbegin?",
      "range": {
        "startLine": 37,
        "startChar": 12,
        "endLine": 37,
        "endChar": 46
      },
      "revId": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c2bec44_72b10bf4",
        "filename": "include/sdbusplus/unpack_properties.hpp",
        "patchSetId": 11
      },
      "lineNbr": 55,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-11T22:41:30Z",
      "side": 1,
      "message": "Do you want std::decay_t instead?  \u0027remove_cv\u0027?",
      "range": {
        "startLine": 55,
        "startChar": 20,
        "endLine": 55,
        "endChar": 39
      },
      "revId": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ac862bb_8e05a8fd",
        "filename": "include/sdbusplus/unpack_properties.hpp",
        "patchSetId": 11
      },
      "lineNbr": 66,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-11T22:41:30Z",
      "side": 1,
      "message": "If this decay is useful, put it in is_optional_v.",
      "range": {
        "startLine": 66,
        "startChar": 27,
        "endLine": 66,
        "endChar": 62
      },
      "revId": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f06e8695_407384a9",
        "filename": "include/sdbusplus/unpack_properties.hpp",
        "patchSetId": 11
      },
      "lineNbr": 134,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-11T22:41:30Z",
      "side": 1,
      "message": "Is this function used anywhere?  Doesn\u0027t seem like it.",
      "revId": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f7518d8_4c534d92",
        "filename": "include/sdbusplus/unpack_properties.hpp",
        "patchSetId": 11
      },
      "lineNbr": 155,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-11T22:41:30Z",
      "side": 1,
      "message": "Should we add an assert string on this?",
      "revId": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94c22787_95765aaf",
        "filename": "include/sdbusplus/unpack_properties.hpp",
        "patchSetId": 11
      },
      "lineNbr": 172,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-11T22:41:30Z",
      "side": 1,
      "message": "Why can\u0027t we just throw directly from here?  Is there some concern that it makes the code-size bigger?  Can you please document the design decision because it isn\u0027t obvious and I\u0027m worried someone else is going to come through and refactor it if you don\u0027t record why.",
      "revId": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8fbe603_56492291",
        "filename": "include/sdbusplus/unpack_properties.hpp",
        "patchSetId": 11
      },
      "lineNbr": 176,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-11T22:41:30Z",
      "side": 1,
      "message": "Is there a reason for not reusing a single enum?",
      "revId": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcd476be_6aa56166",
        "filename": "include/sdbusplus/utility/type_traits.hpp",
        "patchSetId": 11
      },
      "lineNbr": 168,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-11T22:41:30Z",
      "side": 1,
      "message": "sizeof... already returns std::size_t.  If you included cstddef just to get this it isn\u0027t necessary.  Just use auto.",
      "range": {
        "startLine": 168,
        "startChar": 21,
        "endLine": 168,
        "endChar": 27
      },
      "revId": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae328ee7_c7233de5",
        "filename": "include/sdbusplus/utility/type_traits.hpp",
        "patchSetId": 11
      },
      "lineNbr": 171,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-11T22:41:30Z",
      "side": 1,
      "message": "remove_cvref_t or decay_t ... you\u0027re missing volatile handling.  decay_t handles array paramters also, to decay them to a pointer.",
      "range": {
        "startLine": 171,
        "startChar": 23,
        "endLine": 171,
        "endChar": 61
      },
      "revId": "86a913c910b373ab2cf8c14f80a3d1edf2086d91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}