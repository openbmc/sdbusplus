{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "afec56af_4b74a109",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-05T17:35:39Z",
      "side": 1,
      "message": "Is anyone on the review list interested in maintaining the ASIO code?  I\u0027ve rarely touched it, never use it, and not really that interested in maintaining it.  If no one gives critical feedback we might as well just merge this.",
      "revId": "34d5d69b787e469d6a18300e64c5db804ff65d30",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8cd62c2_231a8bc2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-05T18:00:13Z",
      "side": 1,
      "message": "I\u0027d still like to see an example of something real actually made better by this compared to just declaring a setter/getter.  As an interface, this patchset isn\u0027t type safe, so I really don\u0027t think we should merge it as is, and having it exist on master prevents cleaning up the other non typesafe interface (set_property).  If it were made typesafe, I could see it being ok as an extension, but IMO the existing patterns IMO are better.\n\nIf there really isn\u0027t anyone that wants to maintain this, I guess I can throw my name in the ring (although I don\u0027t particularly want to maintain more thing).  It\u0027s not that much code in addition to what I already maintain.",
      "parentUuid": "afec56af_4b74a109",
      "revId": "34d5d69b787e469d6a18300e64c5db804ff65d30",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35129e68_125ad7cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-12-05T19:38:07Z",
      "side": 1,
      "message": "FWIW this sort of thing does seem to exist in other ObjectServers:\n\nhttps://docs.rs/zbus/latest/zbus/struct.ObjectServer.html#method.interface",
      "parentUuid": "f8cd62c2_231a8bc2",
      "revId": "34d5d69b787e469d6a18300e64c5db804ff65d30",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1940d711_379661a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-05T19:47:39Z",
      "side": 1,
      "message": "I don\u0027t see a way in that example to get the current value, only the equivalent of set_property.  I see a registered callback on count(), then I see\n\niface.0 \u003d 42;\n\nWhich I think is setting the count parameter from outside, so this would be the equivalent of set_property()\n\nThen I see registering a callback for getting notified of changes.\niface.count_changed(iface_ref.signal_context()).await?;\n\nI don\u0027t see a direct \"get the current value of this property\" method, only a registered callback.  Maybe I\u0027m missing something?",
      "parentUuid": "35129e68_125ad7cb",
      "revId": "34d5d69b787e469d6a18300e64c5db804ff65d30",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7f509a1_5a9749d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-12-05T20:31:50Z",
      "side": 1,
      "message": "\u003e Maybe I\u0027m missing something?\n\nI\u0027m not sure if you are or not.  There is direct access to the struct that was registered in the first place (instance of MyIface(u32)) from the outside code, irrespective of what callbacks you register with the bindings.\n\nFor the record, I don\u0027t have any strong opinions here.",
      "parentUuid": "1940d711_379661a8",
      "revId": "34d5d69b787e469d6a18300e64c5db804ff65d30",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}