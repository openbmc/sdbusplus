{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "83862e90_feccd61a",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-04-17T15:20:23Z",
      "side": 1,
      "message": "It\u0027s unfortunate we\u0027ve let this bleed out so far.  I probably should have added a saner typedef in vtable.hpp.",
      "range": {
        "startLine": 53,
        "startChar": 4,
        "endLine": 53,
        "endChar": 29
      },
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2348ad0_45e1d90d",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 62,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-04-17T15:20:23Z",
      "side": 1,
      "message": "Since this is just an integer, we shouldn\u0027t need the reference.",
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "777ff546_61b74356",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 584,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-17T16:32:10Z",
      "side": 1,
      "message": "Should the default be unprivileged if that\u0027s what we expect going forward?",
      "range": {
        "startLine": 584,
        "startChar": 59,
        "endLine": 584,
        "endChar": 60
      },
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39042da0_b8b7ca9f",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 584,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-04-17T16:53:52Z",
      "side": 1,
      "message": "I don\u0027t know enough yet to assess if that\u0027s what we should be doing or not.  I know people are claiming \"it works\" but it seems like the security implications to it put us in just as bad (or worse?) state than where we are now with everything running as root.  Unless we fully enable polkit which I don\u0027t know if we can do on the 32MB platforms.\n\nhttps://www.freedesktop.org/software/systemd/man/sd_bus_add_object.html#SD_BUS_VTABLE_UNPRIVILEGED\n\nBased on the word in that manpage it seems like adding CAP_SYS_ADMIN to the non-root users also gets past the issue, but that seems almost as bad as root itself:\n\n\u003e If not specified, either for an individual entry or the whole array, CAP_SYS_ADMIN is checked by default",
      "parentUuid": "777ff546_61b74356",
      "range": {
        "startLine": 584,
        "startChar": 59,
        "endLine": 584,
        "endChar": 60
      },
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "beed882d_abc1e18c",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 584,
      "author": {
        "id": 1001321
      },
      "writtenOn": "2023-04-17T18:14:55Z",
      "side": 1,
      "message": "No matter what we default to, does the security become worse in any scenario compared to what we have today? if no, for now, it wont matter. There are 2 scenarios to consider.\n\n1. Accessing privileged information on DBUS\n2. Accessing privileged information on the system e.g. filesystem.\n\nMy contention is, no matter what the default, this change is better in one scenario and no worse in the other (since everything else runs as root anyways). \n\nThe answer to what should be a default will depend on, is there anything on the D-Bus worth protecting from non-root? Should we address that separately?",
      "parentUuid": "39042da0_b8b7ca9f",
      "range": {
        "startLine": 584,
        "startChar": 59,
        "endLine": 584,
        "endChar": 60
      },
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91acc37c_27571295",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 584,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-04-17T20:06:13Z",
      "side": 1,
      "message": "Making UNPRIVILEDGED the default is potentially worse security than what we have today, yes, especially for users which might be using this library outside of a BMC (which there are a few who have contributed in the past).\n\nUntil we have a better grip on what is the requirement for running as non-root and the implications of setting that, I don\u0027t think we should change the default from 0 yet.\n\nThe rest of this commit is fine to me except for the nits I left earlier.",
      "parentUuid": "beed882d_abc1e18c",
      "range": {
        "startLine": 584,
        "startChar": 59,
        "endLine": 584,
        "endChar": 60
      },
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7f1d748_6aaf30f0",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 584,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-17T20:17:08Z",
      "side": 1,
      "message": "Sure, not doing it yet seems reasonable;  So long as the plan isn\u0027t to submit 400 PRs to every OpenBMC daemon to turn this on for every method call, because that seems like the logical result of this patchset.  Agreed, we should look at the security of the option, but I\u0027m not following how it\u0027s possible that this makes security worse?  Maybe it\u0027s non-ideal, and maybe it makes DBus security no better, but it still seems like an improvement.  Something I\u0027m missing that would make this worse than just running as root?",
      "parentUuid": "91acc37c_27571295",
      "range": {
        "startLine": 584,
        "startChar": 59,
        "endLine": 584,
        "endChar": 60
      },
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30b8dac0_61903542",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 584,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-04-17T20:39:25Z",
      "side": 1,
      "message": "\u003e So long as the plan isn\u0027t to submit 400 PRs to every OpenBMC daemon to turn this on for every method call,\n\n100% agree.  This can be used for experimentation, but we should not be punting a fundamental change like this out to all the repos.  sdbusplus is suppose to make dbus easier.",
      "parentUuid": "f7f1d748_6aaf30f0",
      "range": {
        "startLine": 584,
        "startChar": 59,
        "endLine": 584,
        "endChar": 60
      },
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e324cc42_445149f8",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 584,
      "author": {
        "id": 1001321
      },
      "writtenOn": "2023-04-17T20:45:25Z",
      "side": 1,
      "message": "So once we figure out all the moving parts with running BMCWeb as non-root which I believe we are close to, then there are no objections having the default be unprivileged? Am i understanding this correctly?",
      "parentUuid": "30b8dac0_61903542",
      "range": {
        "startLine": 584,
        "startChar": 59,
        "endLine": 584,
        "endChar": 60
      },
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74809b38_58449660",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 584,
      "author": {
        "id": 1001321
      },
      "writtenOn": "2023-04-17T20:47:11Z",
      "side": 1,
      "message": "Because if we cant do a white list and the default cant be unprivileged then running BMCWeb as non root is DOA.",
      "parentUuid": "e324cc42_445149f8",
      "range": {
        "startLine": 584,
        "startChar": 59,
        "endLine": 584,
        "endChar": 60
      },
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "935c876e_ccee84c6",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 584,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-04-17T20:55:20Z",
      "side": 1,
      "message": "You are fine experimenting with bmcweb and getting something to work.  But, just because something \"works\" doesn\u0027t mean that is the direction we\u0027re going to go.  I\u0027m suspicious that UNPRIVILEGED is the only way forward here and I suspect we are more likely to want to use CAPABILITY(...).  In either case we need to understand the security implications of what we\u0027re setting as the default and/or direction in this area.",
      "parentUuid": "74809b38_58449660",
      "range": {
        "startLine": 584,
        "startChar": 59,
        "endLine": 584,
        "endChar": 60
      },
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cf3a7b0_b0bfdbe7",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 584,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2023-04-18T03:51:12Z",
      "side": 1,
      "message": "CAPABILITY can not be safely used as per maintainer of systemd. \nHis reply was \"This is stuff that cannot safely be implemented on the AF_UNIX. It was a safe concept when kdbus was a thing.\"\n\nWe had gone extensively over different ways to handle it. And had mail discussion with systemd and polkit maintainers. \n\nIssue 1 is systemd needs to let the call pass through, for that we need UNPRIVILAGED. Then we can refine access by polkit or dbus conf. And dbus conf is easier approach as it does not touch code.\n\n@Ed, I agree that making UNPRIVILAGED as default will save us lot of effort. I also had same concerns as Patrick about others who use the repo will see a change in behavior in code if we do that. Can we think of taking the default value as some option coming from meson?",
      "parentUuid": "935c876e_ccee84c6",
      "range": {
        "startLine": 584,
        "startChar": 59,
        "endLine": 584,
        "endChar": 60
      },
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7264b8c4_7dc811c1",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 6
      },
      "lineNbr": 584,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2023-04-18T03:55:26Z",
      "side": 1,
      "message": "@Patrick, the question I asked to systemd maintainer is how to make the following condition return 1\n\nr \u003d sd_bus_creds_has_effective_cap(creds, capability);\n    if (r \u003e 0)\n        return 1;",
      "parentUuid": "4cf3a7b0_b0bfdbe7",
      "range": {
        "startLine": 584,
        "startChar": 59,
        "endLine": 584,
        "endChar": 60
      },
      "revId": "2eb78c889eb5a21c378cd9d4588a0a9e7236c8b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}