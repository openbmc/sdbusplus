{
  "comments": [
    {
      "key": {
        "uuid": "fee010ba_26dba4d2",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-14T18:00:03Z",
      "side": 1,
      "message": "The path::filename returns an empty string rather than a std::optional.  Should we do the same?",
      "revId": "c432e36b674bec340c4d19d693df581dc3ba9b30",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87576e6d_7d9e9a96",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-14T18:22:52Z",
      "side": 1,
      "message": "Sounds reasonable.  My thinking was that dbus paths aren\u0027t allowed to be filenameless, whereas std::filesystem::path can be a directory, but now that I think about it, it\u0027s roughly the same.\n\nThe other thinking is that std::optional makes it a lot more obvious that you need to check for errors before using the string, but I guess making it look like the standard probably trumps ease of use.",
      "parentUuid": "fee010ba_26dba4d2",
      "revId": "c432e36b674bec340c4d19d693df581dc3ba9b30",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4854259_3aabb157",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-14T22:10:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87576e6d_7d9e9a96",
      "revId": "c432e36b674bec340c4d19d693df581dc3ba9b30",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "798328fa_74f24d25",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-14T18:00:03Z",
      "side": 1,
      "message": "parent_path always returns \"/\" in the case where a path like \"/\" is passed in.  std::optional isn\u0027t required.",
      "revId": "c432e36b674bec340c4d19d693df581dc3ba9b30",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5875cf7d_1f366b16",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-14T18:22:52Z",
      "side": 1,
      "message": "Sounds reasonable, will fix.",
      "parentUuid": "798328fa_74f24d25",
      "revId": "c432e36b674bec340c4d19d693df581dc3ba9b30",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e7618f5_0f8d058c",
        "filename": "include/sdbusplus/message/native_types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-14T22:10:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5875cf7d_1f366b16",
      "revId": "c432e36b674bec340c4d19d693df581dc3ba9b30",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01630347_4a280438",
        "filename": "test/message/types.cpp",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-01-14T18:00:03Z",
      "side": 1,
      "message": "I\u0027d like these test cases to be compared with filesystem::path and have the same behavior.",
      "revId": "c432e36b674bec340c4d19d693df581dc3ba9b30",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}