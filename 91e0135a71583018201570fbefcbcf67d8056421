{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c3bf5cb8_a11ac40d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-29T21:45:04Z",
      "side": 1,
      "message": "Seems like nobody else wants to weigh in.",
      "revId": "91e0135a71583018201570fbefcbcf67d8056421",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "143384b8_6316ff6b",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-19T13:29:19Z",
      "side": 1,
      "message": "This is probably fine for now.  I did some refactoring not too long ago so that `sdbusplus::exception_t` now has `get_errno()`.  I should fix up the new_method_error function so that it adds the errno to the message now as well.  Then we can make this all one common path.",
      "range": {
        "startLine": 193,
        "startChar": 0,
        "endLine": 201,
        "endChar": 17
      },
      "revId": "91e0135a71583018201570fbefcbcf67d8056421",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4cf66b4_c16b7639",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-08-22T07:32:07Z",
      "side": 1,
      "message": "I will explain a bit more why I wanted to use exception_t instead of SdBusError.\nOn dbus error message contains some parameters. SdBusError has this message tied with error code. As far as I know it would require to create mapping between new error code and message, and that mapping should exist in every application that uses this method to be working. This approach is not very flexible.\n\nWith exception_t I can send different parameter in error message, then I can read it for example in bmcweb and send response with detailed information which property had invalid value. Caller can still use error codes so it doesn\u0027t break anything. I am not sure if this will be accepted in bmcweb, but it can be still useful feature.\n\n  ErrorName\u003dorg.freedesktop.DBus.Error.InvalidArgs  ErrorMessage\u003d\"Id\"\n  UniqueName\u003d:1.386\n  MESSAGE \"s\" {\n          STRING \"Id\";\n  };\n  ErrorName\u003dorg.freedesktop.DBus.Error.InvalidArgs  ErrorMessage\u003d\"Id\"\n  UniqueName\u003d:1.386\n  MESSAGE \"s\" {\n          STRING \"Name\";\n  };\n  \nCommon code still can be made, but it would be nice if it allowed to send different string in message over dbus for more detailed error handling.",
      "parentUuid": "143384b8_6316ff6b",
      "range": {
        "startLine": 193,
        "startChar": 0,
        "endLine": 201,
        "endChar": 17
      },
      "revId": "91e0135a71583018201570fbefcbcf67d8056421",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f6ec2c4_2724d374",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-22T13:11:51Z",
      "side": 1,
      "message": "I agree with everything you wrote. \n\nI was actually thinking of getting rid of the SdBusError part of the path, since there is already code in sdbus to convert the errno to a nicer error name, we could leverage that. \n\nI think I need to do some revamping of the error functions in order to be complete.  Donâ€™t worry about it.",
      "parentUuid": "b4cf66b4_c16b7639",
      "range": {
        "startLine": 193,
        "startChar": 0,
        "endLine": 201,
        "endChar": 17
      },
      "revId": "91e0135a71583018201570fbefcbcf67d8056421",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}