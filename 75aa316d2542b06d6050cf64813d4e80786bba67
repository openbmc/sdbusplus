{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "961da082_3143ed13",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-06-07T06:53:33Z",
      "side": 1,
      "message": "A quick question: where is this `SDBUSPLUS_DISABLE_BOOST_COROUTINES` defined?\nIt\u0027s not in sdbusplus repo, but I find it in bmcweb.\n\nWhat will happen if sdbusplus does not define the macro, and a user like bmcweb defines the macro?",
      "revId": "75aa316d2542b06d6050cf64813d4e80786bba67",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79ee5142_e38815ab",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-08T20:23:12Z",
      "side": 1,
      "message": "\u003e A quick question: where is this `SDBUSPLUS_DISABLE_BOOST_COROUTINES` defined?\n\nIn any repo that wants to avoid the cotourine dependency.\n\n\u003e It\u0027s not in sdbusplus repo, but I find it in bmcweb.\n\u003e \n\u003e What will happen if sdbusplus does not define the macro, and a user like bmcweb defines the macro?\n\nThen the feature will be disabled, coroutine support will not be available.",
      "parentUuid": "961da082_3143ed13",
      "revId": "75aa316d2542b06d6050cf64813d4e80786bba67",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ef7d04a_0c94e9c8",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-06-11T03:54:12Z",
      "side": 1,
      "message": "nitpick: Usually I prefer the \"positive\" macro names instead of \"negative\" ones.\nSo suggest\n1. Defining `SDBUSPLUS_ENABLE_BOOST_COROUTINES` and enable it by default;\n2. Document it;\n3. Users of sdbusplus could un-define it if it does not want it.\n\n\n`#ifdef SDBUSPLUS_ENABLE_BOOST_COROUTINES` reads more straightforward than `#ifndef SDBUSPLUS_DISABLE_BOOST_COROUTINES`.",
      "parentUuid": "79ee5142_e38815ab",
      "revId": "75aa316d2542b06d6050cf64813d4e80786bba67",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c42aa0a2_8002080e",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-11T04:01:51Z",
      "side": 1,
      "message": "\u003e nitpick: Usually I prefer the \"positive\" macro names instead of \"negative\" ones.\n\u003e So suggest\n\u003e 1. Defining `SDBUSPLUS_ENABLE_BOOST_COROUTINES` and enable it by default;\n\u003e 2. Document it;\n\u003e 3. Users of sdbusplus could un-define it if it does not want it.\n\u003e \n\u003e \n\u003e `#ifdef SDBUSPLUS_ENABLE_BOOST_COROUTINES` reads more straightforward than `#ifndef SDBUSPLUS_DISABLE_BOOST_COROUTINES`.\n\nThat\u0027s a fair comment about Enable being easier to read;  Unfortunately SDBUSPLUS_DISABLE_BOOST_COROUTINES already exists in the codebase.  It would be a refactor to all coroutine daemons to go add an enable flag, which we could do, I just don\u0027t think it\u0027s worth the effort.\n\nWhat do you think?\n\nWhat kind of documentation were you looking for?  I was trying to avoid writing:\n\nSDBUSPLUS_DISABLE_BOOST_COROUTINES: Disables support for boost coroutines.\n\nbecause that seemed redundant.",
      "parentUuid": "9ef7d04a_0c94e9c8",
      "revId": "75aa316d2542b06d6050cf64813d4e80786bba67",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4698ba7c_688cdcb3",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-06-11T06:55:45Z",
      "side": 1,
      "message": "\u003e  It would be a refactor to all coroutine daemons to go add an enable flag, which we could do, I just don\u0027t think it\u0027s worth the effort.\n\nIf the only user for now is `bmcweb` (which is what I see), I think it\u0027s easy to update both bmcweb and sdbusplus.\nIf there are other users, then I guess we have to keep the current code to keep compatibility.",
      "parentUuid": "c42aa0a2_8002080e",
      "revId": "75aa316d2542b06d6050cf64813d4e80786bba67",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}