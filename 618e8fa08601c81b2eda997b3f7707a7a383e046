{
  "comments": [
    {
      "key": {
        "uuid": "ce14d5b5_cef37083",
        "filename": "src/sdbusplus/test/integration/private_bus.cpp",
        "patchSetId": 14
      },
      "lineNbr": 43,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-12-11T22:45:37Z",
      "side": 1,
      "message": "Another case of using errno after it might be corrupted.\n\nI know this is just test code so it doesn\u0027t matter all that much, but sstring is kind of heavy for this when you could simply concatenate strings.  The only one you need to use a special function is `std::to_string(errno)`.",
      "range": {
        "startLine": 43,
        "startChar": 58,
        "endLine": 43,
        "endChar": 63
      },
      "revId": "618e8fa08601c81b2eda997b3f7707a7a383e046",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16f4bd40_4ac6cc98",
        "filename": "src/sdbusplus/test/integration/private_bus.cpp",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-12-11T22:45:37Z",
      "side": 1,
      "message": "Does it cause harm?  Can you document what the harm is?",
      "revId": "618e8fa08601c81b2eda997b3f7707a7a383e046",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d8828a4_b5a44ec7",
        "filename": "src/sdbusplus/test/integration/private_bus.cpp",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-12-11T22:45:37Z",
      "side": 1,
      "message": "This is the first time I\u0027ve seen Docker mentioned.  Some earlier comments of mine might be less relevant, but I had hoped that we could use this for on-device unit / integration testing at some point.\n\nDoes docker-on-docker work sufficiently that we can actually utilize this code during our CI stages?  I\u0027m pretty sure CI runs inside Docker already.",
      "range": {
        "startLine": 69,
        "startChar": 26,
        "endLine": 69,
        "endChar": 32
      },
      "revId": "618e8fa08601c81b2eda997b3f7707a7a383e046",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81f741c6_566c2c81",
        "filename": "src/sdbusplus/test/integration/private_bus.cpp",
        "patchSetId": 14
      },
      "lineNbr": 81,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-12-11T22:45:37Z",
      "side": 1,
      "message": "I don\u0027t think you actually need a new bus for each one of these, do you?  You can have a single bus connection with multiple names reserved, I\u0027m pretty sure.",
      "revId": "618e8fa08601c81b2eda997b3f7707a7a383e046",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51bb3bb9_9739aa0b",
        "filename": "src/sdbusplus/test/integration/private_bus.cpp",
        "patchSetId": 14
      },
      "lineNbr": 90,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-12-11T22:45:37Z",
      "side": 1,
      "message": "I kind of dissuade from using a shared_ptr as the default way to pass elements around.  They\u0027re bigger and slower than most other pointer types, but syntactically they\u0027re cheap enough that people don\u0027t tend to give it much though.  Do you have a need for it to be a shared_ptr or does returning a bus\u0026 or unique_ptr\u0026 work just as well?",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 90,
        "endChar": 36
      },
      "revId": "618e8fa08601c81b2eda997b3f7707a7a383e046",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fd9e520_28b7888c",
        "filename": "src/sdbusplus/test/integration/private_bus.cpp",
        "patchSetId": 14
      },
      "lineNbr": 92,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-12-11T22:45:37Z",
      "side": 1,
      "message": "Suggest `.at(name)` to avoid accidental construction of a null shared_ptr\u003cbus\u003e object.",
      "revId": "618e8fa08601c81b2eda997b3f7707a7a383e046",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}