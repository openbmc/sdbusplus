{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1d22d182_dfd423f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2022-02-23T10:16:05Z",
      "side": 1,
      "message": "My thoughts, wonder what author and maintainers think",
      "revId": "3e0568419ef8d586228b7f408378c5321dda7e93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5311721_c0c1c7f0",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2022-02-23T10:16:05Z",
      "side": 1,
      "message": "There is one significant difference between your implementation and \u0027organic\u0027 getter at https://gerrit.openbmc-project.xyz/c/openbmc/sdbusplus/+/51361/1/include/sdbusplus/asio/object_server.hpp#648 \n\nIn case getter throws sdbusplus::exception_t to notify about error (like uninitialized object or some unexpected access, which can be common during building D-Bus interfaces) your implementation will just \u0027leak\u0027 it to caller of register_property_r.\n\nI\u0027m not sure if it\u0027s a good or bad thing, however it can be unpleasant surprise for new-api-adopter. I would expect that changing API to \u0027better one\u0027 should be transparent and should not change the behavior. Especially when aforementioned exceptions are supposed to be go-to solution for error handling.",
      "revId": "3e0568419ef8d586228b7f408378c5321dda7e93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "191a7c28_b741cd9d",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2022-02-23T10:32:04Z",
      "side": 1,
      "message": "How about catching the exception and returning false?",
      "parentUuid": "a5311721_c0c1c7f0",
      "revId": "3e0568419ef8d586228b7f408378c5321dda7e93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3eb342e_accb3a83",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-02-23T10:55:46Z",
      "side": 1,
      "message": "In all code samples I saw no one is checking if this function returns true or false.\n\nThrow from get handler is only visible on dbus, there will be error message during Get, GetAll, introspect. As Adrian noticed this get handler will be called before adding property and it should be handled by called. It can be good or bad thing depending of how application is designed. For example in case of telemetry service it will be a good thing, but for some other application it can result in unhandled exception.\n\nI will do some tests and investigate some more sdbusplus code if there is another way to do this.",
      "parentUuid": "191a7c28_b741cd9d",
      "revId": "3e0568419ef8d586228b7f408378c5321dda7e93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36092bd1_96e32443",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-02-23T14:03:55Z",
      "side": 1,
      "message": "I dig into details and noticed that when interface is initialized signal \u0027InterfacesAdded\u0027 is send. To create message for \u0027InterfacesAdded\u0027 signal getFunction is called for the first time, but result is ignored. So this is perfect place to get initial value.",
      "parentUuid": "b3eb342e_accb3a83",
      "revId": "3e0568419ef8d586228b7f408378c5321dda7e93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11a993f4_239298a8",
        "filename": "include/sdbusplus/asio/object_server.hpp",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2022-02-23T14:08:53Z",
      "side": 1,
      "message": "Seems reasonable.",
      "parentUuid": "36092bd1_96e32443",
      "revId": "3e0568419ef8d586228b7f408378c5321dda7e93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}