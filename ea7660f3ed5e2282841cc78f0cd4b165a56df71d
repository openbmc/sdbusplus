{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cd32deb5_8861410f",
        "filename": "test/gen/test_property_names.cpp",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-14T19:56:23Z",
      "side": 1,
      "message": "Wow.  Us naming that test case \"server\" was a bad choice, wasn\u0027t it...\n\nI was thrown by \"common::server\".",
      "range": {
        "startLine": 14,
        "startChar": 26,
        "endLine": 14,
        "endChar": 33
      },
      "revId": "ea7660f3ed5e2282841cc78f0cd4b165a56df71d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "442e6165_9f4cfa38",
        "filename": "tools/sdbusplus/templates/interface.common.hpp.mako",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-14T19:56:23Z",
      "side": 1,
      "message": "I\u0027d prefer if these are snake_case.  The async server and client code uses snake_case everywhere.",
      "range": {
        "startLine": 45,
        "startChar": 46,
        "endLine": 45,
        "endChar": 55
      },
      "revId": "ea7660f3ed5e2282841cc78f0cd4b165a56df71d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af2e86d6_fd7daf35",
        "filename": "tools/sdbusplus/templates/interface.common.hpp.mako",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-14T19:56:23Z",
      "side": 1,
      "message": "I\u0027d prefer an `auto` here.  Is there a reason to make it explicitly a string_view?",
      "range": {
        "startLine": 45,
        "startChar": 25,
        "endLine": 45,
        "endChar": 41
      },
      "revId": "ea7660f3ed5e2282841cc78f0cd4b165a56df71d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5e064e5_880b2730",
        "filename": "tools/sdbusplus/templates/interface.common.hpp.mako",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-10-14T20:52:10Z",
      "side": 1,
      "message": "We discussed it in https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/84199/comment/5d8686b4_b7b94a45/\n\nand i assume it would be `const char*` if we used auto.\n\n```\n[alex@odroid tmp]$ g++ --std\u003dc++23 main.cpp\nmain.cpp: In function ‘int main()’:\nmain.cpp:5:11: error: request for member ‘k’ in ‘x’, which is of non-class type ‘const char*’\n    5 |         x.k \u003d 30;\n      |           ^\n[alex@odroid tmp]$ cat main.cpp \n\nint main(){\n\n\tauto x \u003d \"hello\";\n\tx.k \u003d 30;\n\n\treturn 0;\n}\n```\n\nnow we can go from one to the other without too much effort but `string_view` has a various methods which can be used on it and it\u0027s a more modern approach which also stores the size alongside the pointer.\n\nCan you explain why you prefer `auto`?\n\nDoes it not make the code harder to read, given we know the actual type?",
      "parentUuid": "af2e86d6_fd7daf35",
      "range": {
        "startLine": 45,
        "startChar": 25,
        "endLine": 45,
        "endChar": 41
      },
      "revId": "ea7660f3ed5e2282841cc78f0cd4b165a56df71d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eaf2d7dc_48e82dad",
        "filename": "tools/sdbusplus/templates/interface.common.hpp.mako",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-10-14T20:52:10Z",
      "side": 1,
      "message": "I went with it because that\u0027s what looked closest to the actual property name in a lot of cases. \n\nWill adjust in next revision.",
      "parentUuid": "442e6165_9f4cfa38",
      "range": {
        "startLine": 45,
        "startChar": 46,
        "endLine": 45,
        "endChar": 55
      },
      "revId": "ea7660f3ed5e2282841cc78f0cd4b165a56df71d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79916001_d55ae254",
        "filename": "tools/sdbusplus/templates/interface.common.hpp.mako",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-14T21:49:09Z",
      "side": 1,
      "message": "1. I prefer “almost-always-auto” over “explicit types”. This is a philosophical discussion about “which is easier to read” and you’ll find plenty of pros and cons mused about elsewhere; I’m not planning to enumerate those in detail.  \n\n2. “auto” implies “the compiler can choose what is optimal”. Some compilers use const char* and some use const char[].  I’d prefer to leave decisions to compilers rather than humans when humans don’t really care. \n\n3. string_view, while “more modern” is not required to be null terminated, which means it isn’t as simple to use as most people assume.\n\n4. “more modern” in this case doesn’t even mean that the older one is deprecated. Even Rust has about 4 different ways to represent strings. \n\n5. Most of sdbusplus doesn’t use (or accept) string_view anyhow, so it is ergonomically worse to have to use accessor functions everywhere because the functions you want to use the data with don’t support sv.",
      "parentUuid": "d5e064e5_880b2730",
      "range": {
        "startLine": 45,
        "startChar": 25,
        "endLine": 45,
        "endChar": 41
      },
      "revId": "ea7660f3ed5e2282841cc78f0cd4b165a56df71d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ff081f5_31129629",
        "filename": "tools/sdbusplus/templates/interface.common.hpp.mako",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-10-15T09:59:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eaf2d7dc_48e82dad",
      "range": {
        "startLine": 45,
        "startChar": 46,
        "endLine": 45,
        "endChar": 55
      },
      "revId": "ea7660f3ed5e2282841cc78f0cd4b165a56df71d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0dc119f9_8b307be0",
        "filename": "tools/sdbusplus/templates/interface.common.hpp.mako",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-10-15T09:59:27Z",
      "side": 1,
      "message": "Thanks for the detailed reasoning, changed as requested.",
      "parentUuid": "79916001_d55ae254",
      "range": {
        "startLine": 45,
        "startChar": 25,
        "endLine": 45,
        "endChar": 41
      },
      "revId": "ea7660f3ed5e2282841cc78f0cd4b165a56df71d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}