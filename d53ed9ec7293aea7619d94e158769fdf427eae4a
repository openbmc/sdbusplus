{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a9f692b1_32547898",
        "filename": "include/sdbusplus/asio/property.hpp",
        "patchSetId": 17
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T18:03:25Z",
      "side": 1,
      "message": "Can we have a better variable name here?  Something like \"VariantType\"\n\nAlso, should this be a variadic unpack within std::variant\u003cTypes...\u003e, to avoid weird errors in the case where you try to unpack a non variant directly.",
      "range": {
        "startLine": 10,
        "startChar": 19,
        "endLine": 10,
        "endChar": 20
      },
      "revId": "d53ed9ec7293aea7619d94e158769fdf427eae4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "818baff2_289adaf6",
        "filename": "include/sdbusplus/asio/property.hpp",
        "patchSetId": 17
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T18:03:25Z",
      "side": 1,
      "message": "Same as above, can this be a more descriptive variable name?  \"Handler\" was better here.",
      "range": {
        "startLine": 25,
        "startChar": 19,
        "endLine": 25,
        "endChar": 20
      },
      "revId": "d53ed9ec7293aea7619d94e158769fdf427eae4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc3486a0_da18b85a",
        "filename": "include/sdbusplus/unpack_properties.hpp",
        "patchSetId": 17
      },
      "lineNbr": 30,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T18:03:25Z",
      "side": 1,
      "message": "This template parameter seems to be passed through multiple levels, but I don\u0027t see it used anywhere?",
      "range": {
        "startLine": 30,
        "startChar": 10,
        "endLine": 30,
        "endChar": 23
      },
      "revId": "d53ed9ec7293aea7619d94e158769fdf427eae4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d3eb204_5c0f6a0b",
        "filename": "include/sdbusplus/unpack_properties.hpp",
        "patchSetId": 17
      },
      "lineNbr": 30,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-04-12T21:32:12Z",
      "side": 1,
      "message": "It is used in 35 ( `noexcept(Noexcept)` ), but I didn\u0027t expect this to be a template parameter like this.  We already have OnErrorCallback and we end up doing `onErrorCallback(...)`.  We should be able to automatically set `noexcept(onErrorCallback(...))` and then you need to mark the lambda as noexcept for the noexcept lambda.",
      "parentUuid": "fc3486a0_da18b85a",
      "range": {
        "startLine": 30,
        "startChar": 10,
        "endLine": 30,
        "endChar": 23
      },
      "revId": "d53ed9ec7293aea7619d94e158769fdf427eae4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aeed7e38_89bf62c9",
        "filename": "include/sdbusplus/unpack_properties.hpp",
        "patchSetId": 17
      },
      "lineNbr": 148,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T18:03:25Z",
      "side": 1,
      "message": "These days, we shouldn\u0027t need a template for this.  It can just be std::function;  They seem to produce the same code.",
      "range": {
        "startLine": 148,
        "startChar": 11,
        "endLine": 148,
        "endChar": 35
      },
      "revId": "d53ed9ec7293aea7619d94e158769fdf427eae4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}